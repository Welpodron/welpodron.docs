const defaultSettings={elements_selector:".lazy",container:document,threshold:300,thresholds:null,data_src:"src",data_srcset:"srcset",data_sizes:"sizes",data_bg:"bg",data_bg_hidpi:"bg-hidpi",data_bg_multi:"bg-multi",data_bg_multi_hidpi:"bg-multi-hidpi",data_poster:"poster",unobserve_completed:!0,unobserve_entered:!1,cancel_on_exit:!0},getExtendedSettings=e=>Object.assign({},defaultSettings,e),SRC="src",SRCSET="srcset",SIZES="sizes",dataPrefix="data-",getData=(e,t)=>e.getAttribute(dataPrefix+t),unobserve=(e,t)=>{observer.unobserve(e)},getSourceTags=r=>{var s=[];for(let e=0,t;t=r.children[e];e+=1)"SOURCE"===t.tagName&&s.push(t);return s},forEachPictureSource=(e,t)=>{getSourceTags(e.parentNode).forEach(t)},attrsSrcSrcsetSizes=[SRC,SRCSET,SIZES],setAttributeIfValue=(e,t,r)=>{e.setAttribute(t,r)},setImageAttributes=(e,t)=>{setAttributeIfValue(e,SIZES,getData(e,t.data_sizes)),setAttributeIfValue(e,SRCSET,getData(e,t.data_srcset)),setAttributeIfValue(e,SRC,getData(e,t.data_src))},setSourcesImg=(e,t)=>{forEachPictureSource(e,e=>{setOriginalsObject(e,attrsSrcSrcsetSizes),setImageAttributes(e,t)}),setOriginalsObject(e,attrsSrcSrcsetSizes),setImageAttributes(e,t)},setSources=(e,t,r)=>{setSourcesImg(e,t)},addEventListener=(e,t,r)=>{e.addEventListener(t,r)},removeEventListener=(e,t,r)=>{e.removeEventListener(t,r)},addEventListeners=(e,t,r)=>{addEventListener(e,"load",t)},removeEventListeners=e=>{var t,r=e.llEvLisnrs;for(t in r){var s=r[t];removeEventListener(e,t,s)}delete e.llEvLisnrs},doneHandler=(e,t,r)=>{t.unobserve_completed&&unobserve(e,r)},loadHandler=(e,t,r,s)=>{doneHandler(t,r,s)},addOneShotEventListeners=(t,r,s)=>{const a=getTempImage(t)||t;addEventListeners(a,e=>{loadHandler(e,t,r,s),removeEventListeners(a)},_errorHandler)},loadRegular=(e,t,r)=>{addOneShotEventListeners(e,t,r),setSources(e,t,r)},load=(e,t,r)=>{loadRegular(e,t,r)},onEnter=(e,t,r,s)=>{load(e,r,s)},getObserverSettings=e=>({root:e.container===document?null:e.container,rootMargin:e.thresholds||e.threshold+"px"}),intersectionHandler=(e,t,r)=>{e.forEach(e=>onEnter(e.target,e,t,r))},setObserver=(t,r)=>{r._observer=new IntersectionObserver(e=>{intersectionHandler(e,t,r)},getObserverSettings(t))},LazyLoad=function(e,t){e=getExtendedSettings(e);this._settings=e,this.loadingCount=0,setObserver(e,this),this.update(t)};LazyLoad.load=(e,t)=>{t=getExtendedSettings(t);load(e,t)};export{LazyLoad as default};
//# sourceMappingURL=script.min.js.map